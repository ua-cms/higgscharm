goldenjson: analysis/data/Cert_Collisions2022_355100_362760_Golden.txt
lumidata: analysis/data/lumi2022.csv
hlt_paths:
  MuonEG:
    - MuEle
  Muon:
    - SingleMu
  EGamma:
    - SingleEle
object_selection:
  muons:
    field: events.Muon
    cuts:
      pt: events.Muon.pt > 15
      abseta: np.abs(events.Muon.eta) < 2.4
      muon_iso: tight
      muon_id: tight
  electrons:
    field: events.Electron
    cuts:
      pt: events.Electron.pt > 15
      abseta: np.abs(events.Electron.eta) < 2.5
      electron_id: tight
      electron_iso: tight
      electron_muon_dr: delta_r_higher(events.Electron, objects['muons'], 0.4)
  leptons:
    field: select_hww_leptons
    cuts: null
  ll_pairs:
    field: select_hww_ll_pairs
    cuts:
      pt: (objects["ll_pairs"].l1 + objects["ll_pairs"].l2).pt > 30
      charge: (objects["ll_pairs"].l1.charge + objects["ll_pairs"].l2.charge) == 0 
      mass: (objects["ll_pairs"].l1 + objects["ll_pairs"].l2).mass > 12
  cjets:
    field: events.Jet
    cuts:
      min_pt: events.Jet.pt > 20
      abseta: np.abs(events.Jet.eta) < 2.4
      jet_id: tightlepveto
      jet_particlenet_c: medium
      jet_muon_dr: delta_r_higher(events.Jet, objects['leptons'], 0.4)
  candidate_jet:
    field: select_candidate_cjet
    cuts: null
  met:
    field: events.PuppiMET
    cuts: null
  mll:
    field: select_hww_mll
    cuts: null
  ml1:
    field: select_hww_ml1
    cuts: null
  ml2: 
    field: select_hww_ml2
    cuts: null
event_selection:
  selections:
    trigger: get_trigger_mask(events, hlt_paths, dataset_key)
    atleast_one_goodvertex: events.PV.npvsGood > 0
    lumimask: get_lumi_mask(events, goldenjson)
    met_filters: get_metfilters_mask(events, year)
    met_45: objects['met'].pt > 45
    one_electron: ak.num(objects['electrons']) == 1
    one_muon: ak.num(objects['muons']) == 1
    atleast_one_cjet: ak.num(objects['cjets']) > 0
    atleast_two_cjets: ak.num(objects['cjets']) > 1
    transverse_mass_signal: ak.all((objects["ml2"] > 30) & (objects["mll"] > 60), axis=1)
    transverse_mass_top: ak.all((objects["ml2"] > 30) & (objects["mll"] <= 60), axis=1)
    dilepton_mass_signal: ak.all(objects["mll"] <= 72, axis=1)
    dilepton_mass_top: ak.all(objects["mll"] > 72, axis=1)
  categories:
    top:
      - atleast_one_goodvertex
      - lumimask
      - met_filters
      - trigger
      - met_45
      - one_electron
      - one_muon
      - atleast_two_cjets
      - transverse_mass_top
      - dilepton_mass_top
    signal:
      - atleast_one_goodvertex
      - lumimask
      - met_filters
      - trigger
      - met_45
      - one_electron
      - one_muon
      - atleast_one_cjet
      - transverse_mass_signal
      - dilepton_mass_signal
    dilepton_mass_top:
      - atleast_one_goodvertex
      - lumimask
      - met_filters
      - trigger
      - met_45
      - one_electron
      - one_muon
      - atleast_one_cjet
      - transverse_mass_signal
histogram_config:
  add_syst_axis: true
  add_weight: true
  axes:
    met:
      type: Regular
      bins: 50
      start: 45
      stop: 500
      label: $p_T^{miss}$ [GeV]
      expression: objects['met'].pt
    met_phi:
      type: Regular
      bins: 50
      start: -3.14159
      stop: 3.14159
      label: $\phi(p_T^{miss})$ [GeV]
      expression: objects['met'].phi
    met_raw:
      type: Regular
      bins: 50
      start: 45
      stop: 500
      label: Raw $p_T^{miss}$ [GeV]
      expression: objects['met'].pt_raw
    met_phi_raw:
      type: Regular
      bins: 50
      start: -3.14159
      stop: 3.14159
      label: Raw $\phi(p_T^{miss})$ [GeV]
      expression: objects['met'].phi_raw
    lepton1_pt:
      type: Regular
      bins: 50
      start: 15
      stop: 300
      label: $p_T(\ell_1)$ [GeV]
      expression: objects["ll_pairs"].l1.pt
    lepton2_pt:
      type: Regular
      bins: 50
      start: 5
      stop: 300
      label: $p_T(\ell_2^)$ [GeV]
      expression: objects["ll_pairs"].l2.pt
    mtl1:
      type: Regular
      bins: 50
      start: 15
      stop: 300
      label: $m_T^{\ell_1}$ [GeV]
      expression: objects['ml1']
    mtl2:
      type: Regular
      bins: 50
      start: 15
      stop: 300
      label: $m_T^{\ell_2}$ [GeV]
      expression: objects['ml2']
    mtll:
      type: Regular
      bins: 50
      start: 15
      stop: 300
      label: $m_T^{\ell \ell}$ [GeV]
      expression: objects['mll']
    jet_pt:
      type: Regular
      bins: 50
      start: 20
      stop: 500
      label: Candidate c-jet $p_T$ [GeV]
      expression: objects['candidate_cjet'].pt
    jet_eta:
      type: Regular
      bins: 50
      start: -2.4
      stop: 2.4
      label: Candidate c-jet $\eta$
      expression: objects['candidate_cjet'].eta
    jet_phi:
      type: Regular
      bins: 50
      start: -3.14159
      stop: 3.14159
      label: Candidate c-jet $\phi$
      expression: objects['candidate_cjet'].phi
    jet_multiplicity:
      type: IntCategory
      categories:
        - 0
        - 1
        - 2
        - 3
        - 4
        - 5
        - 6
        - 7
        - 8
        - 9
        - 10
        - 11
        - 12
        - 13
        - 14
        - 15
      label: c-jets multiplicity
      expression: ak.num(objects['cjets'])
  layout:
    met:
      - met
      - met_phi
      - met_raw
      - met_phi_raw
    lepton:
      - lepton1_pt
      - lepton2_pt
    mass:
      - mtl1
      - mtl2
      - mtll
    candidate_jet:
      - jet_pt
      - jet_eta
      - jet_phi
    jet_multiplicity:
      - jet_multiplicity